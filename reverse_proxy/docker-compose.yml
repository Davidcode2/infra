services:
  reverse-proxy-certonly:
    image: nginx:alpine
    container_name: reverse_proxy_for_certbot
    configs:
      - source: nginx_certonly_conf
        target: /etc/nginx/nginx.conf
    ports:
      - "80:80"
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    depends_on:
      reverse-proxy-certonly:
        condition: service_started
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    command: >
      certonly -vvv --webroot
      --webroot-path=/var/www/html
      --email jakob.lingel@hotmail.de
      --non-interactive
      --agree-tos 
      --no-eff-email
      --cert-name legit-certificate
      -d admin.schluesselmomente-freiburg.de
      -d jakob-lingel.dev
      -d immoly.jakob-lingel.dev
      -d mimis-kreativstudio.de
      -d alemazung.jakob-lingel.dev
      -d analytics.jakob-lingel.dev
      -d blog.jakob-lingel.dev
      -d immoly.io

  reverse-proxy:
    image: nginx:alpine
    container_name: reverse_proxy
    depends_on: 
      certbot:
        condition: service_completed_successfully
    configs:
      - source: nginx_conf
        target: /etc/nginx/nginx.conf
    ports:
      - "443:443"
    volumes:
      - certbot-etc:/etc/letsencrypt:ro
      - certbot-var:/var/lib/letsencrypt:ro
      - web-root:/var/www/html:ro
    networks:
      - app-network
    restart: unless-stopped

  certbot-renewal-manager: 
    image: certbot/certbot
    container_name: certbot_renewal_manager
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: >
      sh -c "echo 'Starting Certbot renewal loop...';
      trap exit TERM;
      while :; do
        certbot renew --deploy-hook 'docker exec reverse_proxy nginx -s reload';
        sleep 720h & wait $$!;
      done;"
    restart: unless-stopped
    depends_on:
      reverse-proxy:
        condition: service_started
    networks:
      - app-network

configs:
  nginx_conf:
    file: ./nginx.conf
  nginx_certonly_conf:
    file: ./nginx.certonly.conf

volumes:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local

networks:
  app-network:
    name: app-network
    external: true
