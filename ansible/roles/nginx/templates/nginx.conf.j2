# This is an Ansible Jinja2 template for Nginx configuration.
# It leverages variables defined in your Ansible playbook or role defaults
# to dynamically generate server blocks for different domains and services.

events {}

http {
  # Global Nginx settings and rate limiting zones
  # 5mb zone with 15 requests per second per IP (increased from 10r/s)
  limit_req_zone $binary_remote_addr zone=mylimit:5m rate=15r/s;

  # --- HTTP (Port 80) Server Block ---
  # This block handles all HTTP traffic and redirects it to HTTPS,
  # except for Certbot's well-known challenge path.
  server {
      listen 80;
      listen [::]:80;
      root    /var/www/html;
      # Dynamically list all domains from your defined virtual hosts for this catch-all block
      server_name {{ nginx_vhosts | map(attribute='domains') | flatten | join(' ') }};

      error_page  500 502 503 504  /50x.html;

      # Location block for Certbot's ACME challenge
      location /.well-known/acme-challenge/ {
        limit_req zone=mylimit burst=5 nodelay;
        root /var/www/html;
      }

      # Default location to redirect all other HTTP traffic to HTTPS
      location / {
        limit_req zone=mylimit burst=5 nodelay;
        return 301 https://$host$request_uri$is_args$args; # Redirect HTTP to HTTPS
      }

      # Error page location
      location = /50x.html {
        limit_req zone=mylimit burst=5 nodelay;
        root    /var/www/html;
      }
  }

  # --- HTTPS (Port 443) Server Blocks Loop ---
  # This loop iterates through each defined virtual host in 'nginx_vhosts'
  # to create a dedicated HTTPS server block for it.
  {% for vhost in nginx_vhosts %}
  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    # Dynamically set server_name for this specific virtual host
    server_name {{ vhost.domains | join(' ') }};

    # Set SSL certificate and key paths based on 'cert_domain'
    ssl_certificate /etc/letsencrypt/live/{{ vhost.cert_domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ vhost.cert_domain }}/privkey.pem;

    # Include any extra headers defined for this virtual host
    {% if vhost.extra_headers is defined and vhost.extra_headers %}
      {% for header in vhost.extra_headers %}
        {{ header }}
      {% endfor %}
    {% endif %}

    # Default location to proxy pass to the backend for general traffic
    location / {
      limit_req zone=mylimit burst=30 nodelay;
      proxy_pass {{ vhost.proxy_target_443 }};
    }

    # Conditional inclusion of an API specific location block
    # This block is only included if 'is_api_domain' is set to true for the current vhost.
    {% if vhost.is_api_domain %}
    # Specific API location block for this API domain
    location ~ /api/(?<section>.+) {
      limit_req zone=mylimit burst=5 nodelay;
      # Use a specific API proxy target if defined, otherwise fall back to the default 443 target
      proxy_pass {{ vhost.api_proxy_target_443 | default(vhost.proxy_target_443) }}/$section$is_args$args;
    }
    {% endif %}
  }
  {% endfor %}
}
